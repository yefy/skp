// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Message {

namespace {

const ::google::protobuf::Descriptor* MessageChat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageChat_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequestRange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequestRange_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageDataList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageDataList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  MessageChat_descriptor_ = file->message_type(0);
  static const int MessageChat_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChat, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChat, receiver_),
  };
  MessageChat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageChat_descriptor_,
      MessageChat::default_instance_,
      MessageChat_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageChat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChat, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageChat, _is_default_instance_));
  MessageRequestRange_descriptor_ = file->message_type(1);
  static const int MessageRequestRange_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestRange, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestRange, end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestRange, length_),
  };
  MessageRequestRange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequestRange_descriptor_,
      MessageRequestRange::default_instance_,
      MessageRequestRange_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequestRange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestRange, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequestRange, _is_default_instance_));
  MessageRequest_descriptor_ = file->message_type(2);
  static const int MessageRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequest, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequest, friend__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequest, passage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequest, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequest, index_range_),
  };
  MessageRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageRequest_descriptor_,
      MessageRequest::default_instance_,
      MessageRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageRequest, _is_default_instance_));
  MessageData_descriptor_ = file->message_type(3);
  static const int MessageData_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, real_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, friend__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, master_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, data_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, data_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, data_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, data_4_),
  };
  MessageData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageData_descriptor_,
      MessageData::default_instance_,
      MessageData_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageData, _is_default_instance_));
  MessageDataList_descriptor_ = file->message_type(4);
  static const int MessageDataList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDataList, data_),
  };
  MessageDataList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageDataList_descriptor_,
      MessageDataList::default_instance_,
      MessageDataList_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageDataList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDataList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDataList, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageChat_descriptor_, &MessageChat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequestRange_descriptor_, &MessageRequestRange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageRequest_descriptor_, &MessageRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageData_descriptor_, &MessageData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageDataList_descriptor_, &MessageDataList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  delete MessageChat::default_instance_;
  delete MessageChat_reflection_;
  delete MessageRequestRange::default_instance_;
  delete MessageRequestRange_reflection_;
  delete MessageRequest::default_instance_;
  delete MessageRequest_reflection_;
  delete MessageData::default_instance_;
  delete MessageData_reflection_;
  delete MessageDataList::default_instance_;
  delete MessageDataList_reflection_;
}

void protobuf_AddDesc_message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\022\007Message\"-\n\013MessageChat\022"
    "\014\n\004data\030\001 \001(\014\022\020\n\010receiver\030\002 \001(\004\"A\n\023Messa"
    "geRequestRange\022\r\n\005start\030\001 \001(\003\022\013\n\003end\030\002 \001"
    "(\003\022\016\n\006length\030\003 \001(\005\"\202\001\n\016MessageRequest\022\r\n"
    "\005class\030\001 \001(\r\022\016\n\006friend\030\002 \001(\004\022\017\n\007passage\030"
    "\003 \001(\r\022\r\n\005index\030\004 \003(\003\0221\n\013index_range\030\005 \003("
    "\0132\034.Message.MessageRequestRange\"\343\001\n\013Mess"
    "ageData\022\r\n\005index\030\001 \001(\003\022\022\n\nreal_index\030\002 \001"
    "(\003\022\014\n\004time\030\003 \001(\003\022\r\n\005class\030\004 \001(\r\022\014\n\004type\030"
    "\005 \001(\r\022\016\n\006sender\030\006 \001(\004\022\020\n\010receiver\030\007 \001(\004\022"
    "\016\n\006friend\030\010 \001(\004\022\024\n\014master_index\030\t \001(\003\022\016\n"
    "\006data_1\030\n \001(\014\022\016\n\006data_2\030\013 \001(\014\022\016\n\006data_3\030"
    "\014 \001(\014\022\016\n\006data_4\030\r \001(\014\"5\n\017MessageDataList"
    "\022\"\n\004data\030\001 \003(\0132\024.Message.MessageDatab\006pr"
    "oto3", 564);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  MessageChat::default_instance_ = new MessageChat();
  MessageRequestRange::default_instance_ = new MessageRequestRange();
  MessageRequest::default_instance_ = new MessageRequest();
  MessageData::default_instance_ = new MessageData();
  MessageDataList::default_instance_ = new MessageDataList();
  MessageChat::default_instance_->InitAsDefaultInstance();
  MessageRequestRange::default_instance_->InitAsDefaultInstance();
  MessageRequest::default_instance_->InitAsDefaultInstance();
  MessageData::default_instance_->InitAsDefaultInstance();
  MessageDataList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageChat::kDataFieldNumber;
const int MessageChat::kReceiverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageChat::MessageChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.MessageChat)
}

void MessageChat::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageChat::MessageChat(const MessageChat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Message.MessageChat)
}

void MessageChat::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_ = GOOGLE_ULONGLONG(0);
}

MessageChat::~MessageChat() {
  // @@protoc_insertion_point(destructor:Message.MessageChat)
  SharedDtor();
}

void MessageChat::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageChat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageChat_descriptor_;
}

const MessageChat& MessageChat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

MessageChat* MessageChat::default_instance_ = NULL;

MessageChat* MessageChat::New(::google::protobuf::Arena* arena) const {
  MessageChat* n = new MessageChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageChat::Clear() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_ = GOOGLE_ULONGLONG(0);
}

bool MessageChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.MessageChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_receiver;
        break;
      }

      // optional uint64 receiver = 2;
      case 2: {
        if (tag == 16) {
         parse_receiver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receiver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.MessageChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.MessageChat)
  return false;
#undef DO_
}

void MessageChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.MessageChat)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // optional uint64 receiver = 2;
  if (this->receiver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->receiver(), output);
  }

  // @@protoc_insertion_point(serialize_end:Message.MessageChat)
}

::google::protobuf::uint8* MessageChat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.MessageChat)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // optional uint64 receiver = 2;
  if (this->receiver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->receiver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message.MessageChat)
  return target;
}

int MessageChat::ByteSize() const {
  int total_size = 0;

  // optional bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // optional uint64 receiver = 2;
  if (this->receiver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->receiver());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageChat::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MessageChat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageChat>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageChat::MergeFrom(const MessageChat& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.receiver() != 0) {
    set_receiver(from.receiver());
  }
}

void MessageChat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageChat::CopyFrom(const MessageChat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageChat::IsInitialized() const {

  return true;
}

void MessageChat::Swap(MessageChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageChat::InternalSwap(MessageChat* other) {
  data_.Swap(&other->data_);
  std::swap(receiver_, other->receiver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageChat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageChat_descriptor_;
  metadata.reflection = MessageChat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageChat

// optional bytes data = 1;
void MessageChat::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageChat::data() const {
  // @@protoc_insertion_point(field_get:Message.MessageChat.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageChat::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.MessageChat.data)
}
 void MessageChat::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.MessageChat.data)
}
 void MessageChat::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.MessageChat.data)
}
 ::std::string* MessageChat::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:Message.MessageChat.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageChat::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageChat::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Message.MessageChat.data)
}

// optional uint64 receiver = 2;
void MessageChat::clear_receiver() {
  receiver_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageChat::receiver() const {
  // @@protoc_insertion_point(field_get:Message.MessageChat.receiver)
  return receiver_;
}
 void MessageChat::set_receiver(::google::protobuf::uint64 value) {
  
  receiver_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageChat.receiver)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequestRange::kStartFieldNumber;
const int MessageRequestRange::kEndFieldNumber;
const int MessageRequestRange::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequestRange::MessageRequestRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.MessageRequestRange)
}

void MessageRequestRange::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequestRange::MessageRequestRange(const MessageRequestRange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Message.MessageRequestRange)
}

void MessageRequestRange::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  start_ = GOOGLE_LONGLONG(0);
  end_ = GOOGLE_LONGLONG(0);
  length_ = 0;
}

MessageRequestRange::~MessageRequestRange() {
  // @@protoc_insertion_point(destructor:Message.MessageRequestRange)
  SharedDtor();
}

void MessageRequestRange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequestRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequestRange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequestRange_descriptor_;
}

const MessageRequestRange& MessageRequestRange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

MessageRequestRange* MessageRequestRange::default_instance_ = NULL;

MessageRequestRange* MessageRequestRange::New(::google::protobuf::Arena* arena) const {
  MessageRequestRange* n = new MessageRequestRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequestRange::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessageRequestRange*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(start_, length_);

#undef ZR_HELPER_
#undef ZR_

}

bool MessageRequestRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.MessageRequestRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_end;
        break;
      }

      // optional int64 end = 2;
      case 2: {
        if (tag == 16) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_length;
        break;
      }

      // optional int32 length = 3;
      case 3: {
        if (tag == 24) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.MessageRequestRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.MessageRequestRange)
  return false;
#undef DO_
}

void MessageRequestRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.MessageRequestRange)
  // optional int64 start = 1;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start(), output);
  }

  // optional int64 end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end(), output);
  }

  // optional int32 length = 3;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->length(), output);
  }

  // @@protoc_insertion_point(serialize_end:Message.MessageRequestRange)
}

::google::protobuf::uint8* MessageRequestRange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.MessageRequestRange)
  // optional int64 start = 1;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start(), target);
  }

  // optional int64 end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end(), target);
  }

  // optional int32 length = 3;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->length(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message.MessageRequestRange)
  return target;
}

int MessageRequestRange::ByteSize() const {
  int total_size = 0;

  // optional int64 start = 1;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start());
  }

  // optional int64 end = 2;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->end());
  }

  // optional int32 length = 3;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequestRange::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MessageRequestRange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequestRange>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageRequestRange::MergeFrom(const MessageRequestRange& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void MessageRequestRange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequestRange::CopyFrom(const MessageRequestRange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequestRange::IsInitialized() const {

  return true;
}

void MessageRequestRange::Swap(MessageRequestRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequestRange::InternalSwap(MessageRequestRange* other) {
  std::swap(start_, other->start_);
  std::swap(end_, other->end_);
  std::swap(length_, other->length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequestRange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequestRange_descriptor_;
  metadata.reflection = MessageRequestRange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequestRange

// optional int64 start = 1;
void MessageRequestRange::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageRequestRange::start() const {
  // @@protoc_insertion_point(field_get:Message.MessageRequestRange.start)
  return start_;
}
 void MessageRequestRange::set_start(::google::protobuf::int64 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageRequestRange.start)
}

// optional int64 end = 2;
void MessageRequestRange::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageRequestRange::end() const {
  // @@protoc_insertion_point(field_get:Message.MessageRequestRange.end)
  return end_;
}
 void MessageRequestRange::set_end(::google::protobuf::int64 value) {
  
  end_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageRequestRange.end)
}

// optional int32 length = 3;
void MessageRequestRange::clear_length() {
  length_ = 0;
}
 ::google::protobuf::int32 MessageRequestRange::length() const {
  // @@protoc_insertion_point(field_get:Message.MessageRequestRange.length)
  return length_;
}
 void MessageRequestRange::set_length(::google::protobuf::int32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageRequestRange.length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageRequest::kClassFieldNumber;
const int MessageRequest::kFriendFieldNumber;
const int MessageRequest::kPassageFieldNumber;
const int MessageRequest::kIndexFieldNumber;
const int MessageRequest::kIndexRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageRequest::MessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.MessageRequest)
}

void MessageRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageRequest::MessageRequest(const MessageRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Message.MessageRequest)
}

void MessageRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  class__ = 0u;
  friend__ = GOOGLE_ULONGLONG(0);
  passage_ = 0u;
}

MessageRequest::~MessageRequest() {
  // @@protoc_insertion_point(destructor:Message.MessageRequest)
  SharedDtor();
}

void MessageRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageRequest_descriptor_;
}

const MessageRequest& MessageRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

MessageRequest* MessageRequest::default_instance_ = NULL;

MessageRequest* MessageRequest::New(::google::protobuf::Arena* arena) const {
  MessageRequest* n = new MessageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageRequest::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessageRequest*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(friend__, passage_);

#undef ZR_HELPER_
#undef ZR_

  index_.Clear();
  index_range_.Clear();
}

bool MessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.MessageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 class = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_friend;
        break;
      }

      // optional uint64 friend = 2;
      case 2: {
        if (tag == 16) {
         parse_friend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friend__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_passage;
        break;
      }

      // optional uint32 passage = 3;
      case 3: {
        if (tag == 24) {
         parse_passage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_index;
        break;
      }

      // repeated int64 index = 4;
      case 4: {
        if (tag == 34) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_index())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 34, input, this->mutable_index())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_index_range;
        break;
      }

      // repeated .Message.MessageRequestRange index_range = 5;
      case 5: {
        if (tag == 42) {
         parse_index_range:
          DO_(input->IncrementRecursionDepth());
         parse_loop_index_range:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_index_range()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_index_range;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.MessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.MessageRequest)
  return false;
#undef DO_
}

void MessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.MessageRequest)
  // optional uint32 class = 1;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->class_(), output);
  }

  // optional uint64 friend = 2;
  if (this->friend_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->friend_(), output);
  }

  // optional uint32 passage = 3;
  if (this->passage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->passage(), output);
  }

  // repeated int64 index = 4;
  if (this->index_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_index_cached_byte_size_);
  }
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->index(i), output);
  }

  // repeated .Message.MessageRequestRange index_range = 5;
  for (unsigned int i = 0, n = this->index_range_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->index_range(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Message.MessageRequest)
}

::google::protobuf::uint8* MessageRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.MessageRequest)
  // optional uint32 class = 1;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->class_(), target);
  }

  // optional uint64 friend = 2;
  if (this->friend_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->friend_(), target);
  }

  // optional uint32 passage = 3;
  if (this->passage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->passage(), target);
  }

  // repeated int64 index = 4;
  if (this->index_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _index_cached_byte_size_, target);
  }
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->index(i), target);
  }

  // repeated .Message.MessageRequestRange index_range = 5;
  for (unsigned int i = 0, n = this->index_range_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->index_range(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message.MessageRequest)
  return target;
}

int MessageRequest::ByteSize() const {
  int total_size = 0;

  // optional uint32 class = 1;
  if (this->class_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_());
  }

  // optional uint64 friend = 2;
  if (this->friend_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friend_());
  }

  // optional uint32 passage = 3;
  if (this->passage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->passage());
  }

  // repeated int64 index = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->index(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _index_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .Message.MessageRequestRange index_range = 5;
  total_size += 1 * this->index_range_size();
  for (int i = 0; i < this->index_range_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->index_range(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MessageRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageRequest::MergeFrom(const MessageRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  index_.MergeFrom(from.index_);
  index_range_.MergeFrom(from.index_range_);
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.friend_() != 0) {
    set_friend_(from.friend_());
  }
  if (from.passage() != 0) {
    set_passage(from.passage());
  }
}

void MessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageRequest::CopyFrom(const MessageRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageRequest::IsInitialized() const {

  return true;
}

void MessageRequest::Swap(MessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageRequest::InternalSwap(MessageRequest* other) {
  std::swap(class__, other->class__);
  std::swap(friend__, other->friend__);
  std::swap(passage_, other->passage_);
  index_.UnsafeArenaSwap(&other->index_);
  index_range_.UnsafeArenaSwap(&other->index_range_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageRequest_descriptor_;
  metadata.reflection = MessageRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageRequest

// optional uint32 class = 1;
void MessageRequest::clear_class_() {
  class__ = 0u;
}
 ::google::protobuf::uint32 MessageRequest::class_() const {
  // @@protoc_insertion_point(field_get:Message.MessageRequest.class)
  return class__;
}
 void MessageRequest::set_class_(::google::protobuf::uint32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:Message.MessageRequest.class)
}

// optional uint64 friend = 2;
void MessageRequest::clear_friend_() {
  friend__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageRequest::friend_() const {
  // @@protoc_insertion_point(field_get:Message.MessageRequest.friend)
  return friend__;
}
 void MessageRequest::set_friend_(::google::protobuf::uint64 value) {
  
  friend__ = value;
  // @@protoc_insertion_point(field_set:Message.MessageRequest.friend)
}

// optional uint32 passage = 3;
void MessageRequest::clear_passage() {
  passage_ = 0u;
}
 ::google::protobuf::uint32 MessageRequest::passage() const {
  // @@protoc_insertion_point(field_get:Message.MessageRequest.passage)
  return passage_;
}
 void MessageRequest::set_passage(::google::protobuf::uint32 value) {
  
  passage_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageRequest.passage)
}

// repeated int64 index = 4;
int MessageRequest::index_size() const {
  return index_.size();
}
void MessageRequest::clear_index() {
  index_.Clear();
}
 ::google::protobuf::int64 MessageRequest::index(int index) const {
  // @@protoc_insertion_point(field_get:Message.MessageRequest.index)
  return index_.Get(index);
}
 void MessageRequest::set_index(int index, ::google::protobuf::int64 value) {
  index_.Set(index, value);
  // @@protoc_insertion_point(field_set:Message.MessageRequest.index)
}
 void MessageRequest::add_index(::google::protobuf::int64 value) {
  index_.Add(value);
  // @@protoc_insertion_point(field_add:Message.MessageRequest.index)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageRequest::index() const {
  // @@protoc_insertion_point(field_list:Message.MessageRequest.index)
  return index_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageRequest::mutable_index() {
  // @@protoc_insertion_point(field_mutable_list:Message.MessageRequest.index)
  return &index_;
}

// repeated .Message.MessageRequestRange index_range = 5;
int MessageRequest::index_range_size() const {
  return index_range_.size();
}
void MessageRequest::clear_index_range() {
  index_range_.Clear();
}
const ::Message::MessageRequestRange& MessageRequest::index_range(int index) const {
  // @@protoc_insertion_point(field_get:Message.MessageRequest.index_range)
  return index_range_.Get(index);
}
::Message::MessageRequestRange* MessageRequest::mutable_index_range(int index) {
  // @@protoc_insertion_point(field_mutable:Message.MessageRequest.index_range)
  return index_range_.Mutable(index);
}
::Message::MessageRequestRange* MessageRequest::add_index_range() {
  // @@protoc_insertion_point(field_add:Message.MessageRequest.index_range)
  return index_range_.Add();
}
::google::protobuf::RepeatedPtrField< ::Message::MessageRequestRange >*
MessageRequest::mutable_index_range() {
  // @@protoc_insertion_point(field_mutable_list:Message.MessageRequest.index_range)
  return &index_range_;
}
const ::google::protobuf::RepeatedPtrField< ::Message::MessageRequestRange >&
MessageRequest::index_range() const {
  // @@protoc_insertion_point(field_list:Message.MessageRequest.index_range)
  return index_range_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageData::kIndexFieldNumber;
const int MessageData::kRealIndexFieldNumber;
const int MessageData::kTimeFieldNumber;
const int MessageData::kClassFieldNumber;
const int MessageData::kTypeFieldNumber;
const int MessageData::kSenderFieldNumber;
const int MessageData::kReceiverFieldNumber;
const int MessageData::kFriendFieldNumber;
const int MessageData::kMasterIndexFieldNumber;
const int MessageData::kData1FieldNumber;
const int MessageData::kData2FieldNumber;
const int MessageData::kData3FieldNumber;
const int MessageData::kData4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageData::MessageData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.MessageData)
}

void MessageData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageData::MessageData(const MessageData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Message.MessageData)
}

void MessageData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  index_ = GOOGLE_LONGLONG(0);
  real_index_ = GOOGLE_LONGLONG(0);
  time_ = GOOGLE_LONGLONG(0);
  class__ = 0u;
  type_ = 0u;
  sender_ = GOOGLE_ULONGLONG(0);
  receiver_ = GOOGLE_ULONGLONG(0);
  friend__ = GOOGLE_ULONGLONG(0);
  master_index_ = GOOGLE_LONGLONG(0);
  data_1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessageData::~MessageData() {
  // @@protoc_insertion_point(destructor:Message.MessageData)
  SharedDtor();
}

void MessageData::SharedDtor() {
  data_1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageData_descriptor_;
}

const MessageData& MessageData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

MessageData* MessageData::default_instance_ = NULL;

MessageData* MessageData::New(::google::protobuf::Arena* arena) const {
  MessageData* n = new MessageData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessageData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, friend__);
  master_index_ = GOOGLE_LONGLONG(0);
  data_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MessageData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.MessageData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_real_index;
        break;
      }

      // optional int64 real_index = 2;
      case 2: {
        if (tag == 16) {
         parse_real_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &real_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_time;
        break;
      }

      // optional int64 time = 3;
      case 3: {
        if (tag == 24) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_class;
        break;
      }

      // optional uint32 class = 4;
      case 4: {
        if (tag == 32) {
         parse_class:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &class__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional uint32 type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_sender;
        break;
      }

      // optional uint64 sender = 6;
      case 6: {
        if (tag == 48) {
         parse_sender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sender_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_receiver;
        break;
      }

      // optional uint64 receiver = 7;
      case 7: {
        if (tag == 56) {
         parse_receiver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &receiver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_friend;
        break;
      }

      // optional uint64 friend = 8;
      case 8: {
        if (tag == 64) {
         parse_friend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friend__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_master_index;
        break;
      }

      // optional int64 master_index = 9;
      case 9: {
        if (tag == 72) {
         parse_master_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &master_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_data_1;
        break;
      }

      // optional bytes data_1 = 10;
      case 10: {
        if (tag == 82) {
         parse_data_1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_data_2;
        break;
      }

      // optional bytes data_2 = 11;
      case 11: {
        if (tag == 90) {
         parse_data_2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_data_3;
        break;
      }

      // optional bytes data_3 = 12;
      case 12: {
        if (tag == 98) {
         parse_data_3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_data_4;
        break;
      }

      // optional bytes data_4 = 13;
      case 13: {
        if (tag == 106) {
         parse_data_4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_4()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.MessageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.MessageData)
  return false;
#undef DO_
}

void MessageData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.MessageData)
  // optional int64 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->index(), output);
  }

  // optional int64 real_index = 2;
  if (this->real_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->real_index(), output);
  }

  // optional int64 time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->time(), output);
  }

  // optional uint32 class = 4;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->class_(), output);
  }

  // optional uint32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->type(), output);
  }

  // optional uint64 sender = 6;
  if (this->sender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->sender(), output);
  }

  // optional uint64 receiver = 7;
  if (this->receiver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->receiver(), output);
  }

  // optional uint64 friend = 8;
  if (this->friend_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->friend_(), output);
  }

  // optional int64 master_index = 9;
  if (this->master_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->master_index(), output);
  }

  // optional bytes data_1 = 10;
  if (this->data_1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->data_1(), output);
  }

  // optional bytes data_2 = 11;
  if (this->data_2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->data_2(), output);
  }

  // optional bytes data_3 = 12;
  if (this->data_3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->data_3(), output);
  }

  // optional bytes data_4 = 13;
  if (this->data_4().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->data_4(), output);
  }

  // @@protoc_insertion_point(serialize_end:Message.MessageData)
}

::google::protobuf::uint8* MessageData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.MessageData)
  // optional int64 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->index(), target);
  }

  // optional int64 real_index = 2;
  if (this->real_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->real_index(), target);
  }

  // optional int64 time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->time(), target);
  }

  // optional uint32 class = 4;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->class_(), target);
  }

  // optional uint32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->type(), target);
  }

  // optional uint64 sender = 6;
  if (this->sender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->sender(), target);
  }

  // optional uint64 receiver = 7;
  if (this->receiver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->receiver(), target);
  }

  // optional uint64 friend = 8;
  if (this->friend_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->friend_(), target);
  }

  // optional int64 master_index = 9;
  if (this->master_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->master_index(), target);
  }

  // optional bytes data_1 = 10;
  if (this->data_1().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->data_1(), target);
  }

  // optional bytes data_2 = 11;
  if (this->data_2().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->data_2(), target);
  }

  // optional bytes data_3 = 12;
  if (this->data_3().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->data_3(), target);
  }

  // optional bytes data_4 = 13;
  if (this->data_4().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->data_4(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message.MessageData)
  return target;
}

int MessageData::ByteSize() const {
  int total_size = 0;

  // optional int64 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  // optional int64 real_index = 2;
  if (this->real_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->real_index());
  }

  // optional int64 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // optional uint32 class = 4;
  if (this->class_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->class_());
  }

  // optional uint32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // optional uint64 sender = 6;
  if (this->sender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sender());
  }

  // optional uint64 receiver = 7;
  if (this->receiver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->receiver());
  }

  // optional uint64 friend = 8;
  if (this->friend_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friend_());
  }

  // optional int64 master_index = 9;
  if (this->master_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->master_index());
  }

  // optional bytes data_1 = 10;
  if (this->data_1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_1());
  }

  // optional bytes data_2 = 11;
  if (this->data_2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_2());
  }

  // optional bytes data_3 = 12;
  if (this->data_3().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_3());
  }

  // optional bytes data_4 = 13;
  if (this->data_4().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_4());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MessageData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageData>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageData::MergeFrom(const MessageData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.real_index() != 0) {
    set_real_index(from.real_index());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.sender() != 0) {
    set_sender(from.sender());
  }
  if (from.receiver() != 0) {
    set_receiver(from.receiver());
  }
  if (from.friend_() != 0) {
    set_friend_(from.friend_());
  }
  if (from.master_index() != 0) {
    set_master_index(from.master_index());
  }
  if (from.data_1().size() > 0) {

    data_1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_1_);
  }
  if (from.data_2().size() > 0) {

    data_2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_2_);
  }
  if (from.data_3().size() > 0) {

    data_3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_3_);
  }
  if (from.data_4().size() > 0) {

    data_4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_4_);
  }
}

void MessageData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageData::CopyFrom(const MessageData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageData::IsInitialized() const {

  return true;
}

void MessageData::Swap(MessageData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageData::InternalSwap(MessageData* other) {
  std::swap(index_, other->index_);
  std::swap(real_index_, other->real_index_);
  std::swap(time_, other->time_);
  std::swap(class__, other->class__);
  std::swap(type_, other->type_);
  std::swap(sender_, other->sender_);
  std::swap(receiver_, other->receiver_);
  std::swap(friend__, other->friend__);
  std::swap(master_index_, other->master_index_);
  data_1_.Swap(&other->data_1_);
  data_2_.Swap(&other->data_2_);
  data_3_.Swap(&other->data_3_);
  data_4_.Swap(&other->data_4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageData_descriptor_;
  metadata.reflection = MessageData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageData

// optional int64 index = 1;
void MessageData::clear_index() {
  index_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageData::index() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.index)
  return index_;
}
 void MessageData::set_index(::google::protobuf::int64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.index)
}

// optional int64 real_index = 2;
void MessageData::clear_real_index() {
  real_index_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageData::real_index() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.real_index)
  return real_index_;
}
 void MessageData::set_real_index(::google::protobuf::int64 value) {
  
  real_index_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.real_index)
}

// optional int64 time = 3;
void MessageData::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageData::time() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.time)
  return time_;
}
 void MessageData::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.time)
}

// optional uint32 class = 4;
void MessageData::clear_class_() {
  class__ = 0u;
}
 ::google::protobuf::uint32 MessageData::class_() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.class)
  return class__;
}
 void MessageData::set_class_(::google::protobuf::uint32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.class)
}

// optional uint32 type = 5;
void MessageData::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 MessageData::type() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.type)
  return type_;
}
 void MessageData::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.type)
}

// optional uint64 sender = 6;
void MessageData::clear_sender() {
  sender_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageData::sender() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.sender)
  return sender_;
}
 void MessageData::set_sender(::google::protobuf::uint64 value) {
  
  sender_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.sender)
}

// optional uint64 receiver = 7;
void MessageData::clear_receiver() {
  receiver_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageData::receiver() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.receiver)
  return receiver_;
}
 void MessageData::set_receiver(::google::protobuf::uint64 value) {
  
  receiver_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.receiver)
}

// optional uint64 friend = 8;
void MessageData::clear_friend_() {
  friend__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageData::friend_() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.friend)
  return friend__;
}
 void MessageData::set_friend_(::google::protobuf::uint64 value) {
  
  friend__ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.friend)
}

// optional int64 master_index = 9;
void MessageData::clear_master_index() {
  master_index_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageData::master_index() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.master_index)
  return master_index_;
}
 void MessageData::set_master_index(::google::protobuf::int64 value) {
  
  master_index_ = value;
  // @@protoc_insertion_point(field_set:Message.MessageData.master_index)
}

// optional bytes data_1 = 10;
void MessageData::clear_data_1() {
  data_1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageData::data_1() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.data_1)
  return data_1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageData::set_data_1(const ::std::string& value) {
  
  data_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.MessageData.data_1)
}
 void MessageData::set_data_1(const char* value) {
  
  data_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.MessageData.data_1)
}
 void MessageData::set_data_1(const void* value, size_t size) {
  
  data_1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.MessageData.data_1)
}
 ::std::string* MessageData::mutable_data_1() {
  
  // @@protoc_insertion_point(field_mutable:Message.MessageData.data_1)
  return data_1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageData::release_data_1() {
  
  return data_1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageData::set_allocated_data_1(::std::string* data_1) {
  if (data_1 != NULL) {
    
  } else {
    
  }
  data_1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_1);
  // @@protoc_insertion_point(field_set_allocated:Message.MessageData.data_1)
}

// optional bytes data_2 = 11;
void MessageData::clear_data_2() {
  data_2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageData::data_2() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.data_2)
  return data_2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageData::set_data_2(const ::std::string& value) {
  
  data_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.MessageData.data_2)
}
 void MessageData::set_data_2(const char* value) {
  
  data_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.MessageData.data_2)
}
 void MessageData::set_data_2(const void* value, size_t size) {
  
  data_2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.MessageData.data_2)
}
 ::std::string* MessageData::mutable_data_2() {
  
  // @@protoc_insertion_point(field_mutable:Message.MessageData.data_2)
  return data_2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageData::release_data_2() {
  
  return data_2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageData::set_allocated_data_2(::std::string* data_2) {
  if (data_2 != NULL) {
    
  } else {
    
  }
  data_2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_2);
  // @@protoc_insertion_point(field_set_allocated:Message.MessageData.data_2)
}

// optional bytes data_3 = 12;
void MessageData::clear_data_3() {
  data_3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageData::data_3() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.data_3)
  return data_3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageData::set_data_3(const ::std::string& value) {
  
  data_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.MessageData.data_3)
}
 void MessageData::set_data_3(const char* value) {
  
  data_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.MessageData.data_3)
}
 void MessageData::set_data_3(const void* value, size_t size) {
  
  data_3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.MessageData.data_3)
}
 ::std::string* MessageData::mutable_data_3() {
  
  // @@protoc_insertion_point(field_mutable:Message.MessageData.data_3)
  return data_3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageData::release_data_3() {
  
  return data_3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageData::set_allocated_data_3(::std::string* data_3) {
  if (data_3 != NULL) {
    
  } else {
    
  }
  data_3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_3);
  // @@protoc_insertion_point(field_set_allocated:Message.MessageData.data_3)
}

// optional bytes data_4 = 13;
void MessageData::clear_data_4() {
  data_4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageData::data_4() const {
  // @@protoc_insertion_point(field_get:Message.MessageData.data_4)
  return data_4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageData::set_data_4(const ::std::string& value) {
  
  data_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Message.MessageData.data_4)
}
 void MessageData::set_data_4(const char* value) {
  
  data_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Message.MessageData.data_4)
}
 void MessageData::set_data_4(const void* value, size_t size) {
  
  data_4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Message.MessageData.data_4)
}
 ::std::string* MessageData::mutable_data_4() {
  
  // @@protoc_insertion_point(field_mutable:Message.MessageData.data_4)
  return data_4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageData::release_data_4() {
  
  return data_4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageData::set_allocated_data_4(::std::string* data_4) {
  if (data_4 != NULL) {
    
  } else {
    
  }
  data_4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_4);
  // @@protoc_insertion_point(field_set_allocated:Message.MessageData.data_4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDataList::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDataList::MessageDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Message.MessageDataList)
}

void MessageDataList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageDataList::MessageDataList(const MessageDataList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Message.MessageDataList)
}

void MessageDataList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MessageDataList::~MessageDataList() {
  // @@protoc_insertion_point(destructor:Message.MessageDataList)
  SharedDtor();
}

void MessageDataList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDataList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageDataList_descriptor_;
}

const MessageDataList& MessageDataList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_message_2eproto();
  return *default_instance_;
}

MessageDataList* MessageDataList::default_instance_ = NULL;

MessageDataList* MessageDataList::New(::google::protobuf::Arena* arena) const {
  MessageDataList* n = new MessageDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDataList::Clear() {
  data_.Clear();
}

bool MessageDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Message.MessageDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Message.MessageData data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Message.MessageDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Message.MessageDataList)
  return false;
#undef DO_
}

void MessageDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Message.MessageDataList)
  // repeated .Message.MessageData data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Message.MessageDataList)
}

::google::protobuf::uint8* MessageDataList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Message.MessageDataList)
  // repeated .Message.MessageData data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Message.MessageDataList)
  return target;
}

int MessageDataList::ByteSize() const {
  int total_size = 0;

  // repeated .Message.MessageData data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageDataList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MessageDataList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageDataList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageDataList::MergeFrom(const MessageDataList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  data_.MergeFrom(from.data_);
}

void MessageDataList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageDataList::CopyFrom(const MessageDataList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageDataList::IsInitialized() const {

  return true;
}

void MessageDataList::Swap(MessageDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDataList::InternalSwap(MessageDataList* other) {
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageDataList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageDataList_descriptor_;
  metadata.reflection = MessageDataList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageDataList

// repeated .Message.MessageData data = 1;
int MessageDataList::data_size() const {
  return data_.size();
}
void MessageDataList::clear_data() {
  data_.Clear();
}
const ::Message::MessageData& MessageDataList::data(int index) const {
  // @@protoc_insertion_point(field_get:Message.MessageDataList.data)
  return data_.Get(index);
}
::Message::MessageData* MessageDataList::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Message.MessageDataList.data)
  return data_.Mutable(index);
}
::Message::MessageData* MessageDataList::add_data() {
  // @@protoc_insertion_point(field_add:Message.MessageDataList.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::Message::MessageData >*
MessageDataList::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Message.MessageDataList.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::Message::MessageData >&
MessageDataList::data() const {
  // @@protoc_insertion_point(field_list:Message.MessageDataList.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message

// @@protoc_insertion_point(global_scope)
