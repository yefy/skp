// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ack.proto

#ifndef PROTOBUF_ack_2eproto__INCLUDED
#define PROTOBUF_ack_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Ack {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ack_2eproto();
void protobuf_AssignDesc_ack_2eproto();
void protobuf_ShutdownFile_ack_2eproto();

class MessageAck;
class MessageAckList;

// ===================================================================

class MessageAck : public ::google::protobuf::Message {
 public:
  MessageAck();
  virtual ~MessageAck();

  MessageAck(const MessageAck& from);

  inline MessageAck& operator=(const MessageAck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageAck& default_instance();

  void Swap(MessageAck* other);

  // implements Message ----------------------------------------------

  inline MessageAck* New() const { return New(NULL); }

  MessageAck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageAck& from);
  void MergeFrom(const MessageAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 class = 1;
  void clear_class_();
  static const int kClassFieldNumber = 1;
  ::google::protobuf::uint32 class_() const;
  void set_class_(::google::protobuf::uint32 value);

  // optional uint64 friend = 2;
  void clear_friend_();
  static const int kFriendFieldNumber = 2;
  ::google::protobuf::uint64 friend_() const;
  void set_friend_(::google::protobuf::uint64 value);

  // optional uint32 passage = 3;
  void clear_passage();
  static const int kPassageFieldNumber = 3;
  ::google::protobuf::uint32 passage() const;
  void set_passage(::google::protobuf::uint32 value);

  // optional uint64 from = 4;
  void clear_from();
  static const int kFromFieldNumber = 4;
  ::google::protobuf::uint64 from() const;
  void set_from(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Ack.MessageAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 friend__;
  ::google::protobuf::uint32 class__;
  ::google::protobuf::uint32 passage_;
  ::google::protobuf::uint64 from_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ack_2eproto();
  friend void protobuf_AssignDesc_ack_2eproto();
  friend void protobuf_ShutdownFile_ack_2eproto();

  void InitAsDefaultInstance();
  static MessageAck* default_instance_;
};
// -------------------------------------------------------------------

class MessageAckList : public ::google::protobuf::Message {
 public:
  MessageAckList();
  virtual ~MessageAckList();

  MessageAckList(const MessageAckList& from);

  inline MessageAckList& operator=(const MessageAckList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageAckList& default_instance();

  void Swap(MessageAckList* other);

  // implements Message ----------------------------------------------

  inline MessageAckList* New() const { return New(NULL); }

  MessageAckList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageAckList& from);
  void MergeFrom(const MessageAckList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageAckList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Ack.MessageAck ack = 1;
  int ack_size() const;
  void clear_ack();
  static const int kAckFieldNumber = 1;
  const ::Ack::MessageAck& ack(int index) const;
  ::Ack::MessageAck* mutable_ack(int index);
  ::Ack::MessageAck* add_ack();
  ::google::protobuf::RepeatedPtrField< ::Ack::MessageAck >*
      mutable_ack();
  const ::google::protobuf::RepeatedPtrField< ::Ack::MessageAck >&
      ack() const;

  // @@protoc_insertion_point(class_scope:Ack.MessageAckList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::Ack::MessageAck > ack_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ack_2eproto();
  friend void protobuf_AssignDesc_ack_2eproto();
  friend void protobuf_ShutdownFile_ack_2eproto();

  void InitAsDefaultInstance();
  static MessageAckList* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageAck

// optional uint32 class = 1;
inline void MessageAck::clear_class_() {
  class__ = 0u;
}
inline ::google::protobuf::uint32 MessageAck::class_() const {
  // @@protoc_insertion_point(field_get:Ack.MessageAck.class)
  return class__;
}
inline void MessageAck::set_class_(::google::protobuf::uint32 value) {
  
  class__ = value;
  // @@protoc_insertion_point(field_set:Ack.MessageAck.class)
}

// optional uint64 friend = 2;
inline void MessageAck::clear_friend_() {
  friend__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageAck::friend_() const {
  // @@protoc_insertion_point(field_get:Ack.MessageAck.friend)
  return friend__;
}
inline void MessageAck::set_friend_(::google::protobuf::uint64 value) {
  
  friend__ = value;
  // @@protoc_insertion_point(field_set:Ack.MessageAck.friend)
}

// optional uint32 passage = 3;
inline void MessageAck::clear_passage() {
  passage_ = 0u;
}
inline ::google::protobuf::uint32 MessageAck::passage() const {
  // @@protoc_insertion_point(field_get:Ack.MessageAck.passage)
  return passage_;
}
inline void MessageAck::set_passage(::google::protobuf::uint32 value) {
  
  passage_ = value;
  // @@protoc_insertion_point(field_set:Ack.MessageAck.passage)
}

// optional uint64 from = 4;
inline void MessageAck::clear_from() {
  from_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageAck::from() const {
  // @@protoc_insertion_point(field_get:Ack.MessageAck.from)
  return from_;
}
inline void MessageAck::set_from(::google::protobuf::uint64 value) {
  
  from_ = value;
  // @@protoc_insertion_point(field_set:Ack.MessageAck.from)
}

// -------------------------------------------------------------------

// MessageAckList

// repeated .Ack.MessageAck ack = 1;
inline int MessageAckList::ack_size() const {
  return ack_.size();
}
inline void MessageAckList::clear_ack() {
  ack_.Clear();
}
inline const ::Ack::MessageAck& MessageAckList::ack(int index) const {
  // @@protoc_insertion_point(field_get:Ack.MessageAckList.ack)
  return ack_.Get(index);
}
inline ::Ack::MessageAck* MessageAckList::mutable_ack(int index) {
  // @@protoc_insertion_point(field_mutable:Ack.MessageAckList.ack)
  return ack_.Mutable(index);
}
inline ::Ack::MessageAck* MessageAckList::add_ack() {
  // @@protoc_insertion_point(field_add:Ack.MessageAckList.ack)
  return ack_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Ack::MessageAck >*
MessageAckList::mutable_ack() {
  // @@protoc_insertion_point(field_mutable_list:Ack.MessageAckList.ack)
  return &ack_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Ack::MessageAck >&
MessageAckList::ack() const {
  // @@protoc_insertion_point(field_list:Ack.MessageAckList.ack)
  return ack_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Ack

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ack_2eproto__INCLUDED
