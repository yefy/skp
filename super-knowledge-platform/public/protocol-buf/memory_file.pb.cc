// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: memory_file.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "memory_file.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MemoryFile {

namespace {

const ::google::protobuf::Descriptor* MemoryFileMD5_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemoryFileMD5_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemoryFileData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemoryFileData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemoryFileDataList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemoryFileDataList_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemoryFileToFriend_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemoryFileToFriend_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FileDataStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_memory_5ffile_2eproto() {
  protobuf_AddDesc_memory_5ffile_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "memory_file.proto");
  GOOGLE_CHECK(file != NULL);
  MemoryFileMD5_descriptor_ = file->message_type(0);
  static const int MemoryFileMD5_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileMD5, md5_),
  };
  MemoryFileMD5_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MemoryFileMD5_descriptor_,
      MemoryFileMD5::default_instance_,
      MemoryFileMD5_offsets_,
      -1,
      -1,
      -1,
      sizeof(MemoryFileMD5),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileMD5, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileMD5, _is_default_instance_));
  MemoryFileData_descriptor_ = file->message_type(1);
  static const int MemoryFileData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, md5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, lenth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, buffer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, friend__),
  };
  MemoryFileData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MemoryFileData_descriptor_,
      MemoryFileData::default_instance_,
      MemoryFileData_offsets_,
      -1,
      -1,
      -1,
      sizeof(MemoryFileData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileData, _is_default_instance_));
  MemoryFileDataList_descriptor_ = file->message_type(2);
  static const int MemoryFileDataList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileDataList, file_data_),
  };
  MemoryFileDataList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MemoryFileDataList_descriptor_,
      MemoryFileDataList::default_instance_,
      MemoryFileDataList_offsets_,
      -1,
      -1,
      -1,
      sizeof(MemoryFileDataList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileDataList, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileDataList, _is_default_instance_));
  MemoryFileToFriend_descriptor_ = file->message_type(3);
  static const int MemoryFileToFriend_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileToFriend, md5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileToFriend, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileToFriend, lenth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileToFriend, friend__),
  };
  MemoryFileToFriend_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MemoryFileToFriend_descriptor_,
      MemoryFileToFriend::default_instance_,
      MemoryFileToFriend_offsets_,
      -1,
      -1,
      -1,
      sizeof(MemoryFileToFriend),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileToFriend, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryFileToFriend, _is_default_instance_));
  FileDataStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_memory_5ffile_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MemoryFileMD5_descriptor_, &MemoryFileMD5::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MemoryFileData_descriptor_, &MemoryFileData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MemoryFileDataList_descriptor_, &MemoryFileDataList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MemoryFileToFriend_descriptor_, &MemoryFileToFriend::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_memory_5ffile_2eproto() {
  delete MemoryFileMD5::default_instance_;
  delete MemoryFileMD5_reflection_;
  delete MemoryFileData::default_instance_;
  delete MemoryFileData_reflection_;
  delete MemoryFileDataList::default_instance_;
  delete MemoryFileDataList_reflection_;
  delete MemoryFileToFriend::default_instance_;
  delete MemoryFileToFriend_reflection_;
}

void protobuf_AddDesc_memory_5ffile_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021memory_file.proto\022\nMemoryFile\"\034\n\rMemor"
    "yFileMD5\022\013\n\003md5\030\001 \001(\014\"z\n\016MemoryFileData\022"
    "\013\n\003md5\030\001 \001(\014\022\014\n\004name\030\002 \001(\014\022\r\n\005lenth\030\003 \001("
    "\004\022\016\n\006offset\030\004 \001(\004\022\016\n\006status\030\005 \001(\r\022\016\n\006buf"
    "fer\030\006 \001(\014\022\016\n\006friend\030\007 \001(\004\"C\n\022MemoryFileD"
    "ataList\022-\n\tfile_data\030\001 \003(\0132\032.MemoryFile."
    "MemoryFileData\"N\n\022MemoryFileToFriend\022\013\n\003"
    "md5\030\001 \001(\014\022\014\n\004name\030\002 \001(\014\022\r\n\005lenth\030\003 \001(\004\022\016"
    "\n\006friend\030\004 \001(\004*]\n\016FileDataStatus\022\026\n\022File"
    "DataStatusNull\020\000\022\031\n\025FileDataStatusPushin"
    "g\020\001\022\030\n\024FileDataStatusFinish\020\002b\006proto3", 437);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "memory_file.proto", &protobuf_RegisterTypes);
  MemoryFileMD5::default_instance_ = new MemoryFileMD5();
  MemoryFileData::default_instance_ = new MemoryFileData();
  MemoryFileDataList::default_instance_ = new MemoryFileDataList();
  MemoryFileToFriend::default_instance_ = new MemoryFileToFriend();
  MemoryFileMD5::default_instance_->InitAsDefaultInstance();
  MemoryFileData::default_instance_->InitAsDefaultInstance();
  MemoryFileDataList::default_instance_->InitAsDefaultInstance();
  MemoryFileToFriend::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_memory_5ffile_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_memory_5ffile_2eproto {
  StaticDescriptorInitializer_memory_5ffile_2eproto() {
    protobuf_AddDesc_memory_5ffile_2eproto();
  }
} static_descriptor_initializer_memory_5ffile_2eproto_;
const ::google::protobuf::EnumDescriptor* FileDataStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileDataStatus_descriptor_;
}
bool FileDataStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryFileMD5::kMd5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryFileMD5::MemoryFileMD5()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryFile.MemoryFileMD5)
}

void MemoryFileMD5::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MemoryFileMD5::MemoryFileMD5(const MemoryFileMD5& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MemoryFile.MemoryFileMD5)
}

void MemoryFileMD5::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MemoryFileMD5::~MemoryFileMD5() {
  // @@protoc_insertion_point(destructor:MemoryFile.MemoryFileMD5)
  SharedDtor();
}

void MemoryFileMD5::SharedDtor() {
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MemoryFileMD5::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryFileMD5::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemoryFileMD5_descriptor_;
}

const MemoryFileMD5& MemoryFileMD5::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_memory_5ffile_2eproto();
  return *default_instance_;
}

MemoryFileMD5* MemoryFileMD5::default_instance_ = NULL;

MemoryFileMD5* MemoryFileMD5::New(::google::protobuf::Arena* arena) const {
  MemoryFileMD5* n = new MemoryFileMD5;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryFileMD5::Clear() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MemoryFileMD5::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryFile.MemoryFileMD5)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes md5 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_md5()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryFile.MemoryFileMD5)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryFile.MemoryFileMD5)
  return false;
#undef DO_
}

void MemoryFileMD5::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryFile.MemoryFileMD5)
  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->md5(), output);
  }

  // @@protoc_insertion_point(serialize_end:MemoryFile.MemoryFileMD5)
}

::google::protobuf::uint8* MemoryFileMD5::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MemoryFile.MemoryFileMD5)
  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->md5(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemoryFile.MemoryFileMD5)
  return target;
}

int MemoryFileMD5::ByteSize() const {
  int total_size = 0;

  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->md5());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryFileMD5::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MemoryFileMD5* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryFileMD5>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MemoryFileMD5::MergeFrom(const MemoryFileMD5& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
}

void MemoryFileMD5::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryFileMD5::CopyFrom(const MemoryFileMD5& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryFileMD5::IsInitialized() const {

  return true;
}

void MemoryFileMD5::Swap(MemoryFileMD5* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryFileMD5::InternalSwap(MemoryFileMD5* other) {
  md5_.Swap(&other->md5_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryFileMD5::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemoryFileMD5_descriptor_;
  metadata.reflection = MemoryFileMD5_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryFileMD5

// optional bytes md5 = 1;
void MemoryFileMD5::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MemoryFileMD5::md5() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileMD5.md5)
  return md5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileMD5::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileMD5.md5)
}
 void MemoryFileMD5::set_md5(const char* value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryFile.MemoryFileMD5.md5)
}
 void MemoryFileMD5::set_md5(const void* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryFile.MemoryFileMD5.md5)
}
 ::std::string* MemoryFileMD5::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:MemoryFile.MemoryFileMD5.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MemoryFileMD5::release_md5() {
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileMD5::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:MemoryFile.MemoryFileMD5.md5)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryFileData::kMd5FieldNumber;
const int MemoryFileData::kNameFieldNumber;
const int MemoryFileData::kLenthFieldNumber;
const int MemoryFileData::kOffsetFieldNumber;
const int MemoryFileData::kStatusFieldNumber;
const int MemoryFileData::kBufferFieldNumber;
const int MemoryFileData::kFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryFileData::MemoryFileData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryFile.MemoryFileData)
}

void MemoryFileData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MemoryFileData::MemoryFileData(const MemoryFileData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MemoryFile.MemoryFileData)
}

void MemoryFileData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lenth_ = GOOGLE_ULONGLONG(0);
  offset_ = GOOGLE_ULONGLONG(0);
  status_ = 0u;
  buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friend__ = GOOGLE_ULONGLONG(0);
}

MemoryFileData::~MemoryFileData() {
  // @@protoc_insertion_point(destructor:MemoryFile.MemoryFileData)
  SharedDtor();
}

void MemoryFileData::SharedDtor() {
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MemoryFileData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryFileData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemoryFileData_descriptor_;
}

const MemoryFileData& MemoryFileData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_memory_5ffile_2eproto();
  return *default_instance_;
}

MemoryFileData* MemoryFileData::default_instance_ = NULL;

MemoryFileData* MemoryFileData::New(::google::protobuf::Arena* arena) const {
  MemoryFileData* n = new MemoryFileData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryFileData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MemoryFileData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lenth_, offset_);
  ZR_(friend__, status_);
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MemoryFileData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryFile.MemoryFileData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes md5 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_md5()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional bytes name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lenth;
        break;
      }

      // optional uint64 lenth = 3;
      case 3: {
        if (tag == 24) {
         parse_lenth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lenth_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_offset;
        break;
      }

      // optional uint64 offset = 4;
      case 4: {
        if (tag == 32) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_status;
        break;
      }

      // optional uint32 status = 5;
      case 5: {
        if (tag == 40) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_buffer;
        break;
      }

      // optional bytes buffer = 6;
      case 6: {
        if (tag == 50) {
         parse_buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_friend;
        break;
      }

      // optional uint64 friend = 7;
      case 7: {
        if (tag == 56) {
         parse_friend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friend__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryFile.MemoryFileData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryFile.MemoryFileData)
  return false;
#undef DO_
}

void MemoryFileData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryFile.MemoryFileData)
  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->md5(), output);
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // optional uint64 lenth = 3;
  if (this->lenth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->lenth(), output);
  }

  // optional uint64 offset = 4;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->offset(), output);
  }

  // optional uint32 status = 5;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->status(), output);
  }

  // optional bytes buffer = 6;
  if (this->buffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->buffer(), output);
  }

  // optional uint64 friend = 7;
  if (this->friend_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->friend_(), output);
  }

  // @@protoc_insertion_point(serialize_end:MemoryFile.MemoryFileData)
}

::google::protobuf::uint8* MemoryFileData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MemoryFile.MemoryFileData)
  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->md5(), target);
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // optional uint64 lenth = 3;
  if (this->lenth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->lenth(), target);
  }

  // optional uint64 offset = 4;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->offset(), target);
  }

  // optional uint32 status = 5;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->status(), target);
  }

  // optional bytes buffer = 6;
  if (this->buffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->buffer(), target);
  }

  // optional uint64 friend = 7;
  if (this->friend_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->friend_(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemoryFile.MemoryFileData)
  return target;
}

int MemoryFileData::ByteSize() const {
  int total_size = 0;

  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->md5());
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // optional uint64 lenth = 3;
  if (this->lenth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lenth());
  }

  // optional uint64 offset = 4;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // optional uint32 status = 5;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  // optional bytes buffer = 6;
  if (this->buffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buffer());
  }

  // optional uint64 friend = 7;
  if (this->friend_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friend_());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryFileData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MemoryFileData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryFileData>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MemoryFileData::MergeFrom(const MemoryFileData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.lenth() != 0) {
    set_lenth(from.lenth());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.buffer().size() > 0) {

    buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buffer_);
  }
  if (from.friend_() != 0) {
    set_friend_(from.friend_());
  }
}

void MemoryFileData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryFileData::CopyFrom(const MemoryFileData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryFileData::IsInitialized() const {

  return true;
}

void MemoryFileData::Swap(MemoryFileData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryFileData::InternalSwap(MemoryFileData* other) {
  md5_.Swap(&other->md5_);
  name_.Swap(&other->name_);
  std::swap(lenth_, other->lenth_);
  std::swap(offset_, other->offset_);
  std::swap(status_, other->status_);
  buffer_.Swap(&other->buffer_);
  std::swap(friend__, other->friend__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryFileData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemoryFileData_descriptor_;
  metadata.reflection = MemoryFileData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryFileData

// optional bytes md5 = 1;
void MemoryFileData::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MemoryFileData::md5() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileData.md5)
  return md5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileData::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileData.md5)
}
 void MemoryFileData::set_md5(const char* value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryFile.MemoryFileData.md5)
}
 void MemoryFileData::set_md5(const void* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryFile.MemoryFileData.md5)
}
 ::std::string* MemoryFileData::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:MemoryFile.MemoryFileData.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MemoryFileData::release_md5() {
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileData::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:MemoryFile.MemoryFileData.md5)
}

// optional bytes name = 2;
void MemoryFileData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MemoryFileData::name() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileData.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileData.name)
}
 void MemoryFileData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryFile.MemoryFileData.name)
}
 void MemoryFileData::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryFile.MemoryFileData.name)
}
 ::std::string* MemoryFileData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MemoryFile.MemoryFileData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MemoryFileData::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MemoryFile.MemoryFileData.name)
}

// optional uint64 lenth = 3;
void MemoryFileData::clear_lenth() {
  lenth_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MemoryFileData::lenth() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileData.lenth)
  return lenth_;
}
 void MemoryFileData::set_lenth(::google::protobuf::uint64 value) {
  
  lenth_ = value;
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileData.lenth)
}

// optional uint64 offset = 4;
void MemoryFileData::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MemoryFileData::offset() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileData.offset)
  return offset_;
}
 void MemoryFileData::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileData.offset)
}

// optional uint32 status = 5;
void MemoryFileData::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 MemoryFileData::status() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileData.status)
  return status_;
}
 void MemoryFileData::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileData.status)
}

// optional bytes buffer = 6;
void MemoryFileData::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MemoryFileData::buffer() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileData.buffer)
  return buffer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileData::set_buffer(const ::std::string& value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileData.buffer)
}
 void MemoryFileData::set_buffer(const char* value) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryFile.MemoryFileData.buffer)
}
 void MemoryFileData::set_buffer(const void* value, size_t size) {
  
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryFile.MemoryFileData.buffer)
}
 ::std::string* MemoryFileData::mutable_buffer() {
  
  // @@protoc_insertion_point(field_mutable:MemoryFile.MemoryFileData.buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MemoryFileData::release_buffer() {
  
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileData::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    
  } else {
    
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:MemoryFile.MemoryFileData.buffer)
}

// optional uint64 friend = 7;
void MemoryFileData::clear_friend_() {
  friend__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MemoryFileData::friend_() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileData.friend)
  return friend__;
}
 void MemoryFileData::set_friend_(::google::protobuf::uint64 value) {
  
  friend__ = value;
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileData.friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryFileDataList::kFileDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryFileDataList::MemoryFileDataList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryFile.MemoryFileDataList)
}

void MemoryFileDataList::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MemoryFileDataList::MemoryFileDataList(const MemoryFileDataList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MemoryFile.MemoryFileDataList)
}

void MemoryFileDataList::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

MemoryFileDataList::~MemoryFileDataList() {
  // @@protoc_insertion_point(destructor:MemoryFile.MemoryFileDataList)
  SharedDtor();
}

void MemoryFileDataList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MemoryFileDataList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryFileDataList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemoryFileDataList_descriptor_;
}

const MemoryFileDataList& MemoryFileDataList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_memory_5ffile_2eproto();
  return *default_instance_;
}

MemoryFileDataList* MemoryFileDataList::default_instance_ = NULL;

MemoryFileDataList* MemoryFileDataList::New(::google::protobuf::Arena* arena) const {
  MemoryFileDataList* n = new MemoryFileDataList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryFileDataList::Clear() {
  file_data_.Clear();
}

bool MemoryFileDataList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryFile.MemoryFileDataList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MemoryFile.MemoryFileData file_data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_file_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_file_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_file_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryFile.MemoryFileDataList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryFile.MemoryFileDataList)
  return false;
#undef DO_
}

void MemoryFileDataList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryFile.MemoryFileDataList)
  // repeated .MemoryFile.MemoryFileData file_data = 1;
  for (unsigned int i = 0, n = this->file_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->file_data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MemoryFile.MemoryFileDataList)
}

::google::protobuf::uint8* MemoryFileDataList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MemoryFile.MemoryFileDataList)
  // repeated .MemoryFile.MemoryFileData file_data = 1;
  for (unsigned int i = 0, n = this->file_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->file_data(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemoryFile.MemoryFileDataList)
  return target;
}

int MemoryFileDataList::ByteSize() const {
  int total_size = 0;

  // repeated .MemoryFile.MemoryFileData file_data = 1;
  total_size += 1 * this->file_data_size();
  for (int i = 0; i < this->file_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->file_data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryFileDataList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MemoryFileDataList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryFileDataList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MemoryFileDataList::MergeFrom(const MemoryFileDataList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  file_data_.MergeFrom(from.file_data_);
}

void MemoryFileDataList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryFileDataList::CopyFrom(const MemoryFileDataList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryFileDataList::IsInitialized() const {

  return true;
}

void MemoryFileDataList::Swap(MemoryFileDataList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryFileDataList::InternalSwap(MemoryFileDataList* other) {
  file_data_.UnsafeArenaSwap(&other->file_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryFileDataList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemoryFileDataList_descriptor_;
  metadata.reflection = MemoryFileDataList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryFileDataList

// repeated .MemoryFile.MemoryFileData file_data = 1;
int MemoryFileDataList::file_data_size() const {
  return file_data_.size();
}
void MemoryFileDataList::clear_file_data() {
  file_data_.Clear();
}
const ::MemoryFile::MemoryFileData& MemoryFileDataList::file_data(int index) const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileDataList.file_data)
  return file_data_.Get(index);
}
::MemoryFile::MemoryFileData* MemoryFileDataList::mutable_file_data(int index) {
  // @@protoc_insertion_point(field_mutable:MemoryFile.MemoryFileDataList.file_data)
  return file_data_.Mutable(index);
}
::MemoryFile::MemoryFileData* MemoryFileDataList::add_file_data() {
  // @@protoc_insertion_point(field_add:MemoryFile.MemoryFileDataList.file_data)
  return file_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::MemoryFile::MemoryFileData >*
MemoryFileDataList::mutable_file_data() {
  // @@protoc_insertion_point(field_mutable_list:MemoryFile.MemoryFileDataList.file_data)
  return &file_data_;
}
const ::google::protobuf::RepeatedPtrField< ::MemoryFile::MemoryFileData >&
MemoryFileDataList::file_data() const {
  // @@protoc_insertion_point(field_list:MemoryFile.MemoryFileDataList.file_data)
  return file_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryFileToFriend::kMd5FieldNumber;
const int MemoryFileToFriend::kNameFieldNumber;
const int MemoryFileToFriend::kLenthFieldNumber;
const int MemoryFileToFriend::kFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryFileToFriend::MemoryFileToFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryFile.MemoryFileToFriend)
}

void MemoryFileToFriend::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MemoryFileToFriend::MemoryFileToFriend(const MemoryFileToFriend& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MemoryFile.MemoryFileToFriend)
}

void MemoryFileToFriend::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lenth_ = GOOGLE_ULONGLONG(0);
  friend__ = GOOGLE_ULONGLONG(0);
}

MemoryFileToFriend::~MemoryFileToFriend() {
  // @@protoc_insertion_point(destructor:MemoryFile.MemoryFileToFriend)
  SharedDtor();
}

void MemoryFileToFriend::SharedDtor() {
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MemoryFileToFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryFileToFriend::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemoryFileToFriend_descriptor_;
}

const MemoryFileToFriend& MemoryFileToFriend::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_memory_5ffile_2eproto();
  return *default_instance_;
}

MemoryFileToFriend* MemoryFileToFriend::default_instance_ = NULL;

MemoryFileToFriend* MemoryFileToFriend::New(::google::protobuf::Arena* arena) const {
  MemoryFileToFriend* n = new MemoryFileToFriend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryFileToFriend::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MemoryFileToFriend*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lenth_, friend__);
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MemoryFileToFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryFile.MemoryFileToFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes md5 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_md5()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional bytes name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lenth;
        break;
      }

      // optional uint64 lenth = 3;
      case 3: {
        if (tag == 24) {
         parse_lenth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lenth_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_friend;
        break;
      }

      // optional uint64 friend = 4;
      case 4: {
        if (tag == 32) {
         parse_friend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friend__)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryFile.MemoryFileToFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryFile.MemoryFileToFriend)
  return false;
#undef DO_
}

void MemoryFileToFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryFile.MemoryFileToFriend)
  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->md5(), output);
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // optional uint64 lenth = 3;
  if (this->lenth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->lenth(), output);
  }

  // optional uint64 friend = 4;
  if (this->friend_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->friend_(), output);
  }

  // @@protoc_insertion_point(serialize_end:MemoryFile.MemoryFileToFriend)
}

::google::protobuf::uint8* MemoryFileToFriend::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MemoryFile.MemoryFileToFriend)
  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->md5(), target);
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // optional uint64 lenth = 3;
  if (this->lenth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->lenth(), target);
  }

  // optional uint64 friend = 4;
  if (this->friend_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->friend_(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MemoryFile.MemoryFileToFriend)
  return target;
}

int MemoryFileToFriend::ByteSize() const {
  int total_size = 0;

  // optional bytes md5 = 1;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->md5());
  }

  // optional bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // optional uint64 lenth = 3;
  if (this->lenth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lenth());
  }

  // optional uint64 friend = 4;
  if (this->friend_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friend_());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryFileToFriend::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MemoryFileToFriend* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryFileToFriend>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MemoryFileToFriend::MergeFrom(const MemoryFileToFriend& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.lenth() != 0) {
    set_lenth(from.lenth());
  }
  if (from.friend_() != 0) {
    set_friend_(from.friend_());
  }
}

void MemoryFileToFriend::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryFileToFriend::CopyFrom(const MemoryFileToFriend& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryFileToFriend::IsInitialized() const {

  return true;
}

void MemoryFileToFriend::Swap(MemoryFileToFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryFileToFriend::InternalSwap(MemoryFileToFriend* other) {
  md5_.Swap(&other->md5_);
  name_.Swap(&other->name_);
  std::swap(lenth_, other->lenth_);
  std::swap(friend__, other->friend__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryFileToFriend::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemoryFileToFriend_descriptor_;
  metadata.reflection = MemoryFileToFriend_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryFileToFriend

// optional bytes md5 = 1;
void MemoryFileToFriend::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MemoryFileToFriend::md5() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileToFriend.md5)
  return md5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileToFriend::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileToFriend.md5)
}
 void MemoryFileToFriend::set_md5(const char* value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryFile.MemoryFileToFriend.md5)
}
 void MemoryFileToFriend::set_md5(const void* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryFile.MemoryFileToFriend.md5)
}
 ::std::string* MemoryFileToFriend::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:MemoryFile.MemoryFileToFriend.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MemoryFileToFriend::release_md5() {
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileToFriend::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:MemoryFile.MemoryFileToFriend.md5)
}

// optional bytes name = 2;
void MemoryFileToFriend::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MemoryFileToFriend::name() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileToFriend.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileToFriend::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileToFriend.name)
}
 void MemoryFileToFriend::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryFile.MemoryFileToFriend.name)
}
 void MemoryFileToFriend::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryFile.MemoryFileToFriend.name)
}
 ::std::string* MemoryFileToFriend::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MemoryFile.MemoryFileToFriend.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MemoryFileToFriend::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryFileToFriend::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MemoryFile.MemoryFileToFriend.name)
}

// optional uint64 lenth = 3;
void MemoryFileToFriend::clear_lenth() {
  lenth_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MemoryFileToFriend::lenth() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileToFriend.lenth)
  return lenth_;
}
 void MemoryFileToFriend::set_lenth(::google::protobuf::uint64 value) {
  
  lenth_ = value;
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileToFriend.lenth)
}

// optional uint64 friend = 4;
void MemoryFileToFriend::clear_friend_() {
  friend__ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MemoryFileToFriend::friend_() const {
  // @@protoc_insertion_point(field_get:MemoryFile.MemoryFileToFriend.friend)
  return friend__;
}
 void MemoryFileToFriend::set_friend_(::google::protobuf::uint64 value) {
  
  friend__ = value;
  // @@protoc_insertion_point(field_set:MemoryFile.MemoryFileToFriend.friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MemoryFile

// @@protoc_insertion_point(global_scope)
